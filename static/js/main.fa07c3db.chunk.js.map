{"version":3,"sources":["App.js","index.js"],"names":["TextInput","props","tookInput","e","target","value","substring","length","charAt","inputRef","current","style","backgroundColor","setTimeout","callback","React","createRef","this","focus","className","id","type","ref","onChange","Component","shuffle","passes","arr","res","slice","i","Math","random","ch","splice","unshift","zip","a1","a2","map","c","App","genLexicon","letters","split","dual","triple","quadruple","quintuple","concat","reloadTarget","setState","lexicon","state","begin","begun","log","console","handleKeys","onKeyEvent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAKMA,G,wDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAQPC,UAAY,SAACC,GACTA,EAAEC,OAAOC,QAAU,EAAKJ,MAAMG,OAAOE,UAAU,EAAGH,EAAEC,OAAOC,MAAME,QACd,KAAlDJ,EAAEC,OAAOC,MAAMG,OAAOL,EAAEC,OAAOC,MAAME,OAAO,IAC9C,EAAKE,SAASC,QAAQL,MAAQF,EAAEC,OAAOC,MAAMC,UAAU,EAAGH,EAAEC,OAAOC,MAAME,OAAO,GAChF,EAAKE,SAASC,QAAQC,MAAMC,gBAAkB,oBAC9CC,YAAW,WACV,EAAKJ,SAASC,QAAQC,MAAMC,gBAAkB,gBAC5C,OAEH,EAAKH,SAASC,QAAQL,MAAQ,GAG/B,EAAKI,SAASC,QAAQC,MAAMC,gBAAkB,cAG5CT,EAAEC,OAAOC,QAAU,EAAKJ,MAAMG,SAChC,EAAKH,MAAMa,WACX,EAAKL,SAASC,QAAQL,MAAQ,KAxB/B,EAAKI,SAAWM,IAAMC,YAFJ,E,gEAMlBC,KAAKR,SAASC,QAAQQ,U,+BAyBtB,OACC,2BAAOC,UAAU,QACfF,KAAKhB,MAAMG,OACZ,2BAAOgB,GAAG,QAAQC,KAAK,OAAOC,IAAKL,KAAKR,SAAUc,SAAUN,KAAKf,UAAWiB,UAAU,c,GAnClEJ,IAAMS,YA8C9B,SAASC,EAAQC,EAAQC,GAExB,IADA,IAAIC,EAAMD,EAAIE,MAAM,GACfH,EAAO,EAAEA,IACb,IAAI,IAAII,EAAI,EAAGA,EAAIF,EAAIrB,OAAQuB,IAC9B,GAAGC,KAAKC,UAAY,GAAK,CACxB,IAAIC,EAAKL,EAAIE,GACbF,EAAIM,OAAOJ,EAAG,GACdF,EAAIO,QAAQF,GAIf,OAAOL,EAGR,SAASQ,EAAIC,EAAIC,GAChB,OAAOD,EAAGE,KAAI,SAACC,EAAGV,GACjB,MAAO,GAAKU,EAAIF,EAAGR,M,IAyDNW,E,kDApDd,WAAYxC,GAAQ,IAAD,8BAClB,cAAMA,IAOPyC,WAAa,WACZ,IAAIC,EAAUlB,EAAQ,EAAG,6BAA6BmB,MAAM,KACxDC,EAAOT,EAAIO,EAASlB,EAAQ,EAAGkB,IAC/BG,EAASV,EAAIS,EAAMpB,EAAQ,EAAGkB,IAC9BI,EAAYX,EAAIU,EAAQrB,EAAQ,EAAGkB,IACnCK,EAAYZ,EAAIW,EAAWtB,EAAQ,EAAGkB,IAC1C,OAAOA,EAAQM,OAAOJ,GAAMI,OAAOH,GAAQG,OAAOF,GAAWE,OAAOD,IAdlD,EAiBnBE,aAAe,WACd,EAAKC,SAAS,CACbC,QAAS,EAAKC,MAAMD,QAAQvB,MAAM,MAnBjB,EAuBnByB,MAAQ,WACP,EAAKH,SAAS,CACbI,OAAO,KAzBU,EA6BnBC,IAAM,WACLC,QAAQD,IAAI,YA5BZ,EAAKH,MAAQ,CACZD,QAAS,EAAKV,aACda,OAAO,GAJU,E,qDAkClB,OAAGtC,KAAKoC,MAAME,MAEZ,kBAAC,EAAD,CAAWzC,SAAUG,KAAKiC,aAAc9C,OAAQa,KAAKoC,MAAMD,QAAQ,KAInE,6BACC,uDAGA,kBAAC,IAAD,CAAsBM,WAAY,CAAC,SAAUC,WAAY1C,KAAKqC,a,GA7CjDvC,IAAMS,WClExBoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.fa07c3db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport './App.css';\n\nclass TextInput extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.inputRef = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.inputRef.current.focus();\n\t}\n\n\ttookInput = (e) => {\n\t\tif(e.target.value !== this.props.target.substring(0, e.target.value.length)) {\n\t\t\tif(e.target.value.charAt(e.target.value.length-1) != ' ') {\n\t\t\t\tthis.inputRef.current.value = e.target.value.substring(0, e.target.value.length-1);\n\t\t\t\tthis.inputRef.current.style.backgroundColor = \"rgba(200,0,0,0.4)\";\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.inputRef.current.style.backgroundColor = \"transparent\";\n\t\t\t\t}, 2500);\n\t\t\t} else {\n\t\t\t\tthis.inputRef.current.value = '';\n\t\t\t}\n\t\t} else {\n\t\t\tthis.inputRef.current.style.backgroundColor = \"transparent\";\n\t\t}\n\n\t\tif(e.target.value === this.props.target) {\n\t\t\tthis.props.callback();\n\t\t\tthis.inputRef.current.value = '';\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<label className=\"text\">\n\t\t\t\t{this.props.target}\n\t\t\t\t<input id='input' type=\"text\" ref={this.inputRef} onChange={this.tookInput} className=\"text\"/>\n\t\t\t</label>\n\t\t);\n\t}\n}\n\nTextInput.propTypes = {\n\ttarget: PropTypes.string,\n\tcallback: PropTypes.func\n};\n\nfunction shuffle(passes, arr) {\n\tlet res = arr.slice(0);\n\tfor(;passes>0;passes--) {\n\t\tfor(let i = 0; i < res.length; i++) {\n\t\t\tif(Math.random() <= 0.5) {\n\t\t\t\tlet ch = res[i];\n\t\t\t\tres.splice(i, 1);\n\t\t\t\tres.unshift(ch);\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction zip(a1, a2) {\n\treturn a1.map((c, i) => {\n\t\treturn \"\" + c + a2[i];\n\t});\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlexicon: this.genLexicon(),\n\t\t\tbegun: false\n\t\t};\n\t}\n\n\tgenLexicon = () => {\n\t\tlet letters\t= shuffle(5, \"qwertyuiopasdfghjklzxcvbnm\".split(\"\"));\n\t\tlet dual\t= zip(letters, shuffle(5, letters));\n\t\tlet triple\t= zip(dual, shuffle(5, letters));\n\t\tlet quadruple\t= zip(triple, shuffle(5, letters));\n\t\tlet quintuple\t= zip(quadruple, shuffle(5, letters));\n\t\treturn letters.concat(dual).concat(triple).concat(quadruple).concat(quintuple);\n\t}\n\n\treloadTarget = () => {\n\t\tthis.setState({\n\t\t\tlexicon: this.state.lexicon.slice(1)\n\t\t});\n\t}\n\n\tbegin = () => {\n\t\tthis.setState({\n\t\t\tbegun: true\n\t\t});\n\t}\n\n\tlog = () => {\n\t\tconsole.log(\"keydown\");\n\t}\n\n\trender() {\n\t\tif(this.state.begun) {\n\t\t\treturn (\n\t\t\t\t<TextInput callback={this.reloadTarget} target={this.state.lexicon[0]}/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\tPress [SPACE] to begin\n\t\t\t\t\t</div>\n\t\t\t\t\t<KeyboardEventHandler handleKeys={['space']} onKeyEvent={this.begin}>\n\t\t\t\t\t</KeyboardEventHandler>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}