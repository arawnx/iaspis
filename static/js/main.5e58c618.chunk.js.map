{"version":3,"sources":["App.js","index.js"],"names":["TextInput","props","tookInput","e","target","value","substring","length","inputRef","current","style","backgroundColor","callback","React","createRef","this","focus","className","id","type","ref","onChange","Component","shuffle","passes","str","res","split","i","Math","random","ch","splice","unshift","join","App","genLexicon","a1","a2","letters","console","log","map","c","reloadTarget","setState","lexicon","state","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAIMA,G,wDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAQPC,UAAY,SAACC,GACTA,EAAEC,OAAOC,QAAU,EAAKJ,MAAMG,OAAOE,UAAU,EAAGH,EAAEC,OAAOC,MAAME,SACnE,EAAKC,SAASC,QAAQJ,MAAQF,EAAEC,OAAOC,MAAMC,UAAU,EAAGH,EAAEC,OAAOC,MAAME,OAAO,GAChF,EAAKC,SAASC,QAAQC,MAAMC,gBAAkB,qBAE9C,EAAKH,SAASC,QAAQC,MAAMC,gBAAkB,cAG5CR,EAAEC,OAAOC,QAAU,EAAKJ,MAAMG,SAChC,EAAKH,MAAMW,WACX,EAAKJ,SAASC,QAAQJ,MAAQ,KAjB/B,EAAKG,SAAWK,IAAMC,YAFJ,E,gEAMlBC,KAAKP,SAASC,QAAQO,U,+BAkBtB,OACC,2BAAOC,UAAU,QACfF,KAAKd,MAAMG,OACZ,2BAAOc,GAAG,QAAQC,KAAK,OAAOC,IAAKL,KAAKP,SAAUa,SAAUN,KAAKb,UAAWe,UAAU,c,GA5BlEJ,IAAMS,YAuC9B,SAASC,EAAQC,EAAQC,GAExB,IADA,IAAIC,EAAMD,EAAIE,MAAM,IACfH,EAAO,EAAEA,IACb,IAAI,IAAII,EAAI,EAAGA,EAAIF,EAAInB,OAAQqB,IAC9B,GAAGC,KAAKC,UAAY,GAAK,CACxB,IAAIC,EAAKL,EAAIE,GACbF,EAAIM,OAAOJ,EAAG,GACdF,EAAIO,QAAQF,GAIf,OAAOL,EAAIQ,O,IAoCGC,E,kDA1Bd,WAAYlC,GAAQ,IAAD,8BAClB,cAAMA,IAOPmC,WAAa,WACZ,IAhBWC,EAAIC,EAgBTC,EAAU,6BAChBC,QAAQC,KAjBGJ,EAiBKd,EAAQ,EAAGgB,GAjBZD,EAiBsBf,EAAQ,EAAGgB,GAhB1CF,EAAGK,KAAI,SAACC,EAAGf,GACjB,MAAO,GAAKe,EAAIL,EAAGV,SAKD,EAanBgB,aAAe,WACd,EAAKC,SAAS,CACbC,QAAS,EAAKC,MAAMD,QAAQE,MAAM,MAbnC,EAAKD,MAAQ,CACZD,QAAS,EAAKV,cAEfI,QAAQC,MALU,E,qDAoBlB,OACC,kBAAC,EAAD,CAAW7B,SAAUG,KAAK6B,aAAcxC,OAAQW,KAAKgC,MAAMD,QAAQ,S,GAtBpDjC,IAAMS,WC1DxB2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5e58c618.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nclass TextInput extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.inputRef = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.inputRef.current.focus();\n\t}\n\n\ttookInput = (e) => {\n\t\tif(e.target.value !== this.props.target.substring(0, e.target.value.length)) {\n\t\t\tthis.inputRef.current.value = e.target.value.substring(0, e.target.value.length-1);\n\t\t\tthis.inputRef.current.style.backgroundColor = \"rgba(200,0,0,0.4)\";\n\t\t} else {\n\t\t\tthis.inputRef.current.style.backgroundColor = \"transparent\";\n\t\t}\n\n\t\tif(e.target.value === this.props.target) {\n\t\t\tthis.props.callback();\n\t\t\tthis.inputRef.current.value = '';\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<label className=\"text\">\n\t\t\t\t{this.props.target}\n\t\t\t\t<input id='input' type=\"text\" ref={this.inputRef} onChange={this.tookInput} className=\"text\"/>\n\t\t\t</label>\n\t\t);\n\t}\n}\n\nTextInput.propTypes = {\n\ttarget: PropTypes.string,\n\tcallback: PropTypes.func\n};\n\nfunction shuffle(passes, str) {\n\tlet res = str.split('');\n\tfor(;passes>0;passes--) {\n\t\tfor(let i = 0; i < res.length; i++) {\n\t\t\tif(Math.random() <= 0.5) {\n\t\t\t\tlet ch = res[i];\n\t\t\t\tres.splice(i, 1);\n\t\t\t\tres.unshift(ch);\n\t\t\t}\n\t\t}\n\t}\n\treturn res.join();\n}\n\nfunction zip(a1, a2) {\n\treturn a1.map((c, i) => {\n\t\treturn \"\" + c + a2[i];\n\t});\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlexicon: this.genLexicon()\n\t\t};\n\t\tconsole.log();\n\t}\n\n\tgenLexicon = () => {\n\t\tconst letters = \"qwertyuiopasdfghjklzxcvbnm\";\n\t\tconsole.log(zip(shuffle(3, letters), shuffle(3, letters)));\n\t}\n\n\treloadTarget = () => {\n\t\tthis.setState({\n\t\t\tlexicon: this.state.lexicon.slice(1)\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<TextInput callback={this.reloadTarget} target={this.state.lexicon[0]}/>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}